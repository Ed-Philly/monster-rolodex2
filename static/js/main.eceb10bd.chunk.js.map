{"version":3,"sources":["components/card/card.jsx","components/card-list/card-list.jsx","components/search-box/searchbox.jsx","App.js","index.js"],"names":["Card","monster","className","src","id","alt","name","email","CardLIst","props","monsters","map","SearchBox","handleChange","placeholder","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","reponse","json","users","this","filteredMonsters","filter","toLowerCase","includes","toLocaleLowerCase","Component","ReactDOM","render","document","getElementById"],"mappings":"4SAgBeA,G,MAZF,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAGX,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAQG,GAAlC,mBAA+CH,EAAQG,GAAK,IAAK,EAAI,GAAIH,EAAQG,GAAe,IAASC,IAAI,YACrH,6BAAKJ,EAAQK,OACb,4BAAIL,EAAQM,UAHqBN,EAAQG,MCOtCI,G,MAVE,SAACC,GACd,OACI,qBAAKP,UAAU,YAAf,SAEQO,EAAMC,SAASC,KAAI,SAACV,GAAD,OAAa,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQG,WCKpDQ,G,YAXG,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,aAAaC,EAAiB,EAAjBA,YAC7B,OACI,uBACAZ,UAAU,SACNa,KAAK,SACLD,YAAaA,EACbE,SAAUH,MCgCPI,E,kDAlCb,aAAe,IAAD,8BACZ,gBAYFJ,aAAe,SAACK,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAZtC,EAAKC,MAAQ,CACXb,SAAU,GACVU,YAAa,IAJH,E,gEAOO,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAaA,EAAQC,UAC1BF,MAAK,SAACG,GAAD,OAAW,EAAKT,SAAS,CAAET,SAAUkB,S,+BAMrC,IAAD,EAC2BC,KAAKN,MAA/Bb,EADD,EACCA,SAAUU,EADX,EACWA,YACZU,EAAmBpB,EAASqB,QAAO,SAAC9B,GAAD,OACvCA,EAAQK,KAAK0B,cAAcC,SAASb,EAAYc,wBAElD,OACE,sBAAKhC,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACEW,aAAcgB,KAAKhB,aACnBC,YAAY,oBAEd,cAAC,EAAD,CAAUJ,SAAUoB,W,GA7BVK,aCDlBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.eceb10bd.chunk.js","sourcesContent":["\nimport React from 'react';\nimport './card.css'\n\nconst Card = ({monster}) => {\n\n\n    return ( \n        <div className=\"card-container\" key={monster.id}>\n            <img src={`https://robohash.org/${monster.id}?set=set${monster.id % 2 ===0 ? 2 : monster.id % 3 === 0 ? 3 : 3}`} alt=\"monster\"/>\n            <h2>{monster.name}</h2>\n            <p>{monster.email}</p>\n        </div>\n     );\n}\n \nexport default Card;","import React from 'react'\nimport Card from '../card/card';\nimport \"./card-list.css\"\n\n\nconst CardLIst = (props) => {\n    return ( \n        <div className=\"card-list\">\n            {\n                props.monsters.map((monster) => <Card key={monster.id} monster={monster}/>)\n            } \n        </div>\n     );\n}\n \nexport default CardLIst;","import React from 'react';\nimport './searchbox.css'\n\nconst SearchBox = ({handleChange,placeholder}) => {\n    return ( \n        <input\n        className=\"search\"\n            type=\"search\"\n            placeholder={placeholder}\n            onChange={handleChange}\n          />\n     );\n}\n \nexport default SearchBox;","import React, { Component } from \"react\";\nimport CardList from \"./components/card-list/card-list\";\n\nimport \"./App.css\";\nimport SearchBox from \"./components/search-box/searchbox\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchField: \"\",\n    };\n  }\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((reponse) => reponse.json())\n      .then((users) => this.setState({ monsters: users }));\n  }\n\n  handleChange = (e) => {\n    this.setState({ searchField: e.target.value });\n  };\n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter((monster) =>\n      monster.name.toLowerCase().includes(searchField.toLocaleLowerCase())\n    );\n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <SearchBox\n          handleChange={this.handleChange}\n          placeholder=\"search monsters\"\n        />\n        <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}